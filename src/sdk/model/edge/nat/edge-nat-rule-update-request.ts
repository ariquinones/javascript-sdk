import { EdgeNATRuleUpdateRequestJson } from './__json__/edge-nat-rule-update-request-json';

/**
 * Edge Nat Rule Update Request
 */
/* istanbul ignore next: autogenerated */
export class EdgeNATRuleUpdateRequest {

  private readonly _json: EdgeNATRuleUpdateRequestJson;

  constructor(edgeNATRuleUpdateRequest: EdgeNATRuleUpdateRequest);
  constructor(edgeNATRuleUpdateRequestJson: EdgeNATRuleUpdateRequestJson);
  constructor(description: string, id: number, ruleType: string, enabled: boolean, icmpSubType: string,
                originalIp: string, originalPort: string, protocol: string, translatedIp: string,
                translatedPort: string, interfaceName: string, idx: number);
  constructor(firstParam: string | EdgeNATRuleUpdateRequest | EdgeNATRuleUpdateRequestJson, id?: number,
                ruleType?: string, enabled?: boolean, icmpSubType?: string, originalIp?: string,
                originalPort?: string, protocol?: string, translatedIp?: string, translatedPort?: string,
                interfaceName?: string, idx?: number) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        description: firstParam,
        id: id,
        rule_type: ruleType,
        enabled: enabled,
        icmp_sub_type: icmpSubType,
        original_ip: originalIp,
        original_port: originalPort,
        protocol: protocol,
        translated_ip: translatedIp,
        translated_port: translatedPort,
        interface: interfaceName,
        idx: idx
      } as EdgeNATRuleUpdateRequestJson;
    } else if (firstParam instanceof EdgeNATRuleUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as EdgeNATRuleUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as EdgeNATRuleUpdateRequestJson;
    }
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get id.
   * @returns {number}
   */
  get id(): number {
    return this._json.id;
  }

  /**
   * Get rule type.
   * @returns {string}
   */
  get ruleType(): string {
    return this._json.rule_type;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get icmp sub type.
   * @returns {string}
   */
  get icmpSubType(): string {
    return this._json.icmp_sub_type;
  }

  /**
   * Get original ip.
   * @returns {string}
   */
  get originalIp(): string {
    return this._json.original_ip;
  }

  /**
   * Get original port.
   * @returns {string}
   */
  get originalPort(): string {
    return this._json.original_port;
  }

  /**
   * Get protocol.
   * @returns {string}
   */
  get protocol(): string {
    return this._json.protocol;
  }

  /**
   * Get translated ip.
   * @returns {string}
   */
  get translatedIp(): string {
    return this._json.translated_ip;
  }

  /**
   * Get translated port.
   * @returns {string}
   */
  get translatedPort(): string {
    return this._json.translated_port;
  }

  /**
   * Get interface.
   * @returns {string}
   */
  get interface(): string {
    return this._json.interface;
  }

  /**
   * Get idx.
   * @returns {number}
   */
  get idx(): number {
    return this._json.idx;
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeNATRuleUpdateRequestJson}
   */
  get json(): EdgeNATRuleUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
